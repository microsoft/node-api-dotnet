# Sample workflow for building and deploying a VitePress site to GitHub Pages
# Reference: https://vitepress.dev/guide/deploy#github-pages

name: Publish Docs

on:
  # Runs on pushes targeting the `main` branch. Change this to `master` if you're
  # using the `master` branch as the default branch.
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Not needed if lastUpdated is not enabled

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: './docs/package-lock.json'
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install npm packages
        working-directory: ./docs
        run: npm ci

      - name: Build JS API docs
        working-directory: ./docs
        run: npm run build-js

      - name: Build .NET API docs
        working-directory: ./docs
        run: npm run build-dotnet

      - name: Render docs with VitePress
        working-directory: ./docs
        run: npm run build

      - name: Copy images
        working-directory: ./docs
        run: cp -r images .vitepress/dist/images

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/.vitepress/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4