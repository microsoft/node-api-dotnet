# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: napi-dotnet build and test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: # Enable manually starting a build

permissions:
  checks: write
  pull-requests: write
  statuses: write

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]
        node-version: [ 18.x ]
      fail-fast: false  # Don't cancel other jobs when one job fails

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Deep clone is required for versioning on git commit height

    - name: Link libdl.so # Required by .NET 6
      if: matrix.os == 'ubuntu-latest'
      run: sudo ln -s /lib/x86_64-linux-gnu/libdl.so.2 /lib/x86_64-linux-gnu/libdl.so

    - name: Setup .NET 6
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Setup .NET 7
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Build
      run: dotnet build --configuration Release

    - name: Build packages
      run: dotnet pack --configuration Release

    # Uncomment to enable an SSH session for debugging
    # - name: Setup tmate session
    #  uses: mxschmitt/action-tmate@v3
    #  with:
    #      limit-access-to-actor: true

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ runner.os }}-packages
        path: |
          out/pkg/*.nupkg
          out/pkg/*.tgz

    - name: Test .NET 4.7.2
      if: matrix.os == 'windows-latest'
      env:
        TRACE_NODE_API_HOST: 1
      run: dotnet test -f net472 --configuration Release --logger trx --results-directory "test-netfx47-node${{ matrix.node-version }}"

    - name: Test .NET 6
      env:
        TRACE_NODE_API_HOST: 1
      run: dotnet test -f net6.0 --configuration Release --logger trx --results-directory "test-dotnet6-node${{ matrix.node-version }}"

    - name: Test .NET 7
      env:
        TRACE_NODE_API_HOST: 1
      run: dotnet test -f net7.0 --configuration Release --logger trx --results-directory "test-dotnet7-node${{ matrix.node-version }}"

    - name: Upload test logs
      uses: actions/upload-artifact@v3
      with:
        name: test-logs-${{ runner.os }}-node${{ matrix.node-version }}
        path: out/obj/Release/**/*.log
      if: ${{ always() }}

    - name: Publish test results
      uses: dorny/test-reporter@v1
      with:
        name: test (${{ runner.os }}, node${{ matrix.node-version }})
        path: test-dotnet*-node${{ matrix.node-version }}/*.trx
        reporter: dotnet-trx
      if: ${{ always() }} # Run this step even when there are test failures

    - name: Check formatting
      run: dotnet format --no-restore --severity info --verbosity detailed --verify-no-changes
      if: ${{ always() }} # Run this step even when there are build failures

    # TODO: Publish packages
    # - name: Publish packages
    #   run: dotnet nuget push out/pkg/*.nupkg
