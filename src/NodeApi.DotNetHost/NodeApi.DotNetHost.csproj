<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AssemblyName>Microsoft.JavaScript.NodeApi.DotNetHost</AssemblyName>
    <RootNamespace>Microsoft.JavaScript.NodeApi.DotNetHost</RootNamespace>
    <IsPackable>true</IsPackable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\NodeApi\NodeApi.csproj" GeneratePathProperty="true" PrivateAssets="all" />
  </ItemGroup>
  
  <ItemGroup>
    <None Pack="true" PackagePath="\" Include="..\..\README.md" />
  </ItemGroup>

  <Target Name="PublishNativeHost" BeforeTargets="Pack"
    Condition=" '$(NoPublish)' != 'true' "
  >
    <!--
      Publish the AOT native binary (for the current RuntimeIdentifier) so that it can be packed.
      It's necessary to use <Exec/> here rather than a recursive <MSBuild/> task because
      PublishAot modifies properties/targets which would not be re-computed by the task.
    -->
    <Exec Command="dotnet publish $(MSBuildThisFileDirectory)..\NodeApi\NodeApi.csproj -c $(Configuration) -f net8.0 -p:PublishAot=true" />
  </Target>

  <Target Name="NpmPack"
    AfterTargets="Pack"
    Outputs="$(PackageOutputPath)node-api-dotnet-$(PackageVersion).tgz"
  >
    <PropertyGroup>
      <NodeApiPackScript>$(MSBuildThisFileDirectory)..\node-api-dotnet\pack.js</NodeApiPackScript>
      <RuntimeIdentifierList Condition=" '$(RuntimeIdentifierList)' == '' ">$(RuntimeIdentifier)</RuntimeIdentifierList>
    </PropertyGroup>
    <Message Importance="High" Text="node $(NodeApiPackScript) node-api-dotnet $(Configuration) $(RuntimeIdentifierList)" />
    <Exec Command="node $(NodeApiPackScript) node-api-dotnet $(Configuration) $(RuntimeIdentifierList)" />
  </Target>

</Project>
