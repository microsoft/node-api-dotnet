# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.
# 
# The Release pipeline to publish NPM and NuGet packages
# to public ADO feeds and to npmjs.com and Nuget.org feeds.
#

trigger: none
name: $(Date:yyyyMMdd).$(Rev:r)

resources:
  pipelines:
  - pipeline: 'microsoft_node-api-dotnet_ci'
    project: 'ISS'
    source: 'microsoft.node-api-dotnet.ci'
    trigger:
      branches:
        include:
        - main

  repositories:
  - repository: CustomPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/OfficePipelineTemplates
    ref: refs/tags/release

extends:
  template: v1/Office.Official.PipelineTemplate.yml@CustomPipelineTemplates
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      vmImage: windows-latest
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling-BulkMigrated-Release
    sdl:
      eslint:
        enableExclusions: true
        # This repo does not ship any javascript code. But has many test cases for the js engine that fail parsing, have code considered insecure and crash eslint.
        exclusionPatterns: |
          '**/*.*'

    stages:
    - stage: main_release
      displayName: Publish packages
      jobs:
      - job: nuget_ms_react_native_public_job
        displayName: NuGet to ADO ms/react-native-public feed
        templateContext:
          type: releaseJob
          isProduction: true
          inputs:
          - input: pipelineArtifact
            pipeline: microsoft_node-api-dotnet_ci
            artifactName: published-packages
            targetPath: $(Pipeline.Workspace)\published-packages

        # Use 1ES.PublishNuGet task to securely publish NuGet packages to ms/react-native-public feed.
        steps:
        - script: dir /S $(Pipeline.Workspace)\published-packages
          displayName: Show directory contents

        - script: dotnet nuget list source
          displayName: Show Nuget sources

        - task: 1ES.PublishNuGet@1
          displayName: NuGet push
          inputs:
            useDotNetTask: true
            packageParentPath: '$(Pipeline.Workspace)/published-packages'
            packagesToPush: '$(Pipeline.Workspace)/published-packages/Microsoft.JavaScript.NodeApi.*.nupkg'
            nuGetFeedType: external
            publishFeedCredentials: 'Nuget - ms/react-native-public'
            externalEndpoint: 'Nuget - ms/react-native-public'
            publishPackageMetadata: true

      - job: npm_ms_react_native_job
        displayName: NPM to ADO ms/react-native feed
        templateContext:
          type: releaseJob
          isProduction: true
          inputs:
          - input: pipelineArtifact
            pipeline: microsoft_node-api-dotnet_ci
            artifactName: 'published-packages'
            targetPath: $(Pipeline.Workspace)\published-packages

        # Use the NPM utility to authenticate and publish to ADO ms/react-native feed
        steps:
        - task: NodeTool@0
          displayName: Use Node 22.x
          inputs:
            versionSpec: 22.x

        - task: CmdLine@2
          displayName: Setup npmrc file for react-native feed
          inputs:
            script: |
              echo registry=https://pkgs.dev.azure.com/ms/_packaging/react-native/npm/registry/ > $(Pipeline.Workspace)\published-packages\.npmrc
              echo always-auth=true >> $(Pipeline.Workspace)\published-packages\.npmrc

        - task: npmAuthenticate@0
          displayName: npm Authenticate .npmrc
          inputs:
            workingFile: $(Pipeline.Workspace)\published-packages\.npmrc
            customEndpoint: Npm - ms/react-native

        - script: dir /S $(Pipeline.Workspace)\published-packages
          displayName: Show directory contents

        - task: CmdLine@2
          displayName: npm publish to react-native feed
          inputs:
            script: |
              cd $(Pipeline.Workspace)\published-packages
              for %%i in (*.tgz) do npm publish %%i

      - job: nuget_org_job
        displayName: NuGet to nuget.org
        templateContext:
          type: releaseJob
          isProduction: true
          inputs:
          - input: pipelineArtifact
            pipeline: microsoft_node-api-dotnet_ci
            artifactName: 'published-packages'
            targetPath: '$(Pipeline.Workspace)/published-packages'

        # Take the API Key from the OGX Torus subscription KV storage and use it to publish to Noget.org
        steps:
        - task: AzureKeyVault@2
          inputs:
            azureSubscription: ESRP-JSHost3
            KeyVaultName: OGX-JSHost-KV
            SecretsFilter: 'OGX-JSHost-Nuget-org-API-key-Microsoft-JavaScript-NodeApi'
            RunAsPreJob: true

        - task: NuGetToolInstaller@1
          displayName: 'Use NuGet'

        - script: 'nuget.exe SetApiKey $(OGX-JSHost-Nuget-org-API-key-Microsoft-JavaScript-NodeApi)'
          displayName: 'NuGet SetApiKey (nuget.org)'

        - script: dir /S $(Pipeline.Workspace)\published-packages
          displayName: Show directory contents

        - script: >
            nuget.exe push
            $(Pipeline.Workspace)\published-packages\Microsoft.JavaScript.NodeApi.*.nupkg
            -Source https://api.nuget.org/v3/index.json
            -SkipDuplicate
            -NonInteractive
            -Verbosity Detailed
          displayName: 'NuGet push (nuget.org)'

      - job: npmjs_com_job
        displayName: NPM to npmjs.com
        templateContext:
          type: releaseJob
          isProduction: true
          inputs:
          - input: pipelineArtifact
            pipeline: microsoft_node-api-dotnet_ci
            artifactName: 'published-packages'
            targetPath: $(Pipeline.Workspace)\published-packages

        # Use ESRP Release to securely publish to npmjs.com.
        steps:
        - script: dir /S $(Pipeline.Workspace)\published-packages
          displayName: Show directory contents

        - task: 'SFP.release-tasks.custom-build-release-task.EsrpRelease@9'
          displayName: 'ESRP Release to npmjs.com'
          inputs:
            connectedservicename: 'ESRP-JSHost3'
            usemanagedidentity: false
            keyvaultname: 'OGX-JSHost-KV'
            authcertname: 'OGX-JSHost-Auth4'
            signcertname: 'OGX-JSHost-Sign3'
            clientid: '0a35e01f-eadf-420a-a2bf-def002ba898d'
            domaintenantid: 'cdc5aeea-15c5-4db6-b079-fcadd2505dc2'
            contenttype: npm
            folderlocation: $(Pipeline.Workspace)\published-packages
            owners: 'vmorozov@microsoft.com'
            approvers: 'khosany@microsoft.com'
